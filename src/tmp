jsx statement is a funciton you can call

react wrapper, 
connect()

wraps component and makes new componenet wiring up the props

a configuration funciton

this state maps to this prop, this state maps to this prop

can use as if has no knowledge of redux store



connect passes in dispach

when you don't put anything in connect

eRecipe = connect()(UpdateRecipe)

pass in two functions,

maps state to props, the othe rone


map dispatch to props


Nathan hasn't used map disp to props a lot




active: ownProps.filter === state.visibilityFilter

mapstateto props

map state properties into your component

state-trees, substates, 
it is a property


dispatch to props is same idea.
  prolly should use it


binding property on click, when you call it, will dispatch the function


state - what the filters
filter off of them differently, then yeah.
filter property
  {title property
  description property}


VisibleRecipeList
  for this component, could either


two methods for it, inside of mapstateToProps
can actually pull in the state and filter out the recipes in their,
so will only pass in recipes you want to display in recipe list

OR
2. can mapp all recipes.

then pass in filters to recipe list. and have it do it.

the first one may make more sense

  

once you understand that,
is reselect library.
  it is good for building objects off your state

in redux way, if didn't have redux, a filter changes

build another app state, but then lots of duplicate data
reciples list and filtered ...

reselect, 

selector for it, filtered recipes selector. those map to your props, he thinks it uses connect function.

pass in filters recipes selector.
map it with connect funciton. 
so recipelist only gets filtered recipes



edit recipe

the new state of the app
  this recipe is in edit mode.
  cna save it right on recipes,
  a property right on recipes that says edit mode. 

he has a separate substate, inline edit.
say what id is being inline edited.

******* bad idea ********
inside list component,

isEditing





edit action
state with id of recipe ou ar e editing.

modal will take in the,

or could give the whole recipe
editing modal just says hey, there's a reipe beign editied, i need to show self and recipe 


and when update it,

editing reducer to, to remove the item to say not editing

edit reducer to update with infor from form

substate -



a selector would be a good 

the state would jsut

hey editing recipe is 4

make  a selector
i take in recipe list and recipe id
you're editng 4, here's recipe 4

or her'es null if not editing one

modal just looks for the sleector

if null, don't show, otherwise don't show

store 
const thing is what connect fucntnion does behing the thing

takes off context, grabs sttate, and maps difft state thing syou define.

connect is cleaner b/c component doens't have to know there's ttuff on context


put script tag 
defer true
never seen or used



React-
  probably not, kind of.

higher order is
but the react thing is not necessarily
reorganize, restructure, remap data
the higher order part is





underscore
  bad wrap
lodash
  100% compat.

think lodash
  used quite a bit

some things going away but a lot won't

concepts still the same
looping through ear


array.forEach


jQuery
  its big thing was the DOM API was horrible between browsers, even a couple years ago


AXIOS for react
  created by someone who wokred at 
Matthew Zebirsky
  really easy,
  uses promises





interview questions
  kinda a good idea


he'd see it
  if a blog entry post
  hye i struggled with this and i struggled learning how this is bound, this is wha tlearned i nprocess, YES

Q and A
  seems weird



JS is a functional language at heart,
functional prototypal language

it will teach you a lot of stuff.
one of those things, makes a difference between script kiddy vs someone who understands it


functional stuff is a win if can get through it.

he got through half

had a hard time staying awake,
have to put a lot of thought into it.

study 
if understand how to write own curry function, mad props

